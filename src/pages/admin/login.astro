---
import Layout from '../../layouts/Layout.astro';

export const prerender = false;
---

<Layout title="DTikTok Admin Login" description="Admin login for DTikTok management dashboard">
  
  <section class="min-h-screen flex items-center justify-center py-12 px-4 bg-gradient-to-br from-base-100 via-base-200 to-base-300">
    <div class="max-w-md w-full space-y-8">
      
      <!-- Header -->
      <div class="text-center">
        <div class="flex items-center justify-center mb-6">
          <div class="w-16 h-16 bg-primary/20 rounded-2xl flex items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
            </svg>
          </div>
        </div>
        <h2 class="text-3xl font-bold text-white">Admin Login</h2>
        <p class="mt-2 text-white/70">Access DTikTok Dashboard</p>
      </div>

      <!-- Login Form -->
      <div class="glass rounded-3xl border border-white/10 shadow-2xl p-8">
        <form id="login-form" class="space-y-6">
          
          <!-- Username -->
          <div class="form-control">
            <label class="label">
              <span class="label-text text-white font-medium">Username</span>
            </label>
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white/40" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
              </div>
              <input type="text" id="username" required class="input input-bordered w-full pl-10 bg-base-300/50 text-white border-primary/20 focus:border-primary/50" placeholder="Enter username" />
            </div>
          </div>

          <!-- Password -->
          <div class="form-control">
            <label class="label">
              <span class="label-text text-white font-medium">Password</span>
            </label>
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white/40" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                </svg>
              </div>
              <input type="password" id="password" required class="input input-bordered w-full pl-10 bg-base-300/50 text-white border-primary/20 focus:border-primary/50" placeholder="Enter password" />
              <button type="button" id="toggle-password" class="absolute inset-y-0 right-0 pr-3 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white/40 hover:text-white/70" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                </svg>
              </button>
            </div>
          </div>

          <!-- Remember Session -->
          <div class="form-control">
            <label class="cursor-pointer label">
              <span class="label-text text-white/80">Remember me for 1 hour</span>
              <input type="checkbox" id="remember" checked class="checkbox checkbox-primary" />
            </label>
          </div>

          <!-- Submit Button -->
          <button type="submit" id="login-btn" class="btn btn-primary btn-lg w-full">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1" />
            </svg>
            <span id="login-text">Sign In</span>
          </button>
        </form>

        <!-- Error Message -->
        <div id="error-message" class="alert alert-error mt-4 hidden">
          <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span id="error-text">Error message</span>
        </div>
      </div>

      <!-- Info -->
      <div class="text-center">
        <p class="text-white/60 text-sm">
          Default credentials: <code class="text-warning">admin</code> / <code class="text-warning">admin123</code>
        </p>
        <p class="text-white/50 text-xs mt-2">
          Change these credentials after first login for security
        </p>
      </div>
    </div>
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const loginForm = document.getElementById('login-form');
      const usernameInput = document.getElementById('username');
      const passwordInput = document.getElementById('password');
      const loginBtn = document.getElementById('login-btn');
      const loginText = document.getElementById('login-text');
      const errorMessage = document.getElementById('error-message');
      const errorText = document.getElementById('error-text');
      const togglePassword = document.getElementById('toggle-password');

      // Check if already logged in
      checkExistingSession();

      // Toggle password visibility
      togglePassword.addEventListener('click', function() {
        const type = passwordInput.type === 'password' ? 'text' : 'password';
        passwordInput.type = type;
        
        // Update icon
        if (type === 'text') {
          this.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white/40 hover:text-white/70" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21" />
            </svg>
          `;
        } else {
          this.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white/40 hover:text-white/70" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
            </svg>
          `;
        }
      });

      // Form submission
      loginForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const username = usernameInput.value.trim();
        const password = passwordInput.value;
        
        if (!username || !password) {
          showError('Please enter both username and password');
          return;
        }

        // Show loading state
        setLoading(true);
        hideError();

        try {
          const response = await fetch('/api/auth', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              action: 'login',
              username,
              password
            })
          });

          const result = await response.json();

          if (result.success) {
            // Store token
            localStorage.setItem('auth-token', result.token);
            localStorage.setItem('auth-expires', result.expiresAt);
            localStorage.setItem('auth-username', username);
            
            // Show success and redirect
            showSuccess('Login successful! Redirecting...');
            setTimeout(() => {
              window.location.href = '/admin/dashboard';
            }, 1000);
          } else {
            showError(result.message || 'Login failed');
          }
        } catch (error) {
          console.error('Login error:', error);
          showError('Connection error. Please try again.');
        } finally {
          setLoading(false);
        }
      });

      function setLoading(loading) {
        loginBtn.disabled = loading;
        if (loading) {
          loginText.textContent = 'Signing In...';
          loginBtn.classList.add('loading');
        } else {
          loginText.textContent = 'Sign In';
          loginBtn.classList.remove('loading');
        }
      }

      function showError(message) {
        errorText.textContent = message;
        errorMessage.classList.remove('hidden');
      }

      function hideError() {
        errorMessage.classList.add('hidden');
      }

      function showSuccess(message) {
        errorMessage.className = 'alert alert-success mt-4';
        errorText.textContent = message;
        errorMessage.classList.remove('hidden');
      }

      async function checkExistingSession() {
        const token = localStorage.getItem('auth-token');
        const expires = localStorage.getItem('auth-expires');
        
        if (token && expires && Date.now() < parseInt(expires)) {
          try {
            const response = await fetch('/api/auth', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                action: 'verify',
                token
              })
            });

            const result = await response.json();
            
            if (result.success && result.valid) {
              // Already logged in, redirect
              window.location.href = '/admin/dashboard';
            }
          } catch (error) {
            console.log('Session check failed:', error);
          }
        }
      }

      // Enter key to submit
      passwordInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          loginForm.dispatchEvent(new Event('submit'));
        }
      });
    });
  </script>
</Layout> 