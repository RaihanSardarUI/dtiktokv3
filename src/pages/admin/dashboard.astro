---
import Layout from '../../layouts/Layout.astro';

// Import the configuration data
import { getDtiktokConfig } from '../../utils/config.js';

const dtiktokConfig = getDtiktokConfig();

export const prerender = false;
---

<Layout title="DTikTok Admin Dashboard" description="Admin panel to manage DTikTok shortcut configuration">
  
  <!-- Admin Dashboard -->
  <section class="min-h-screen py-8 px-4 bg-gradient-to-br from-base-100 via-base-200 to-base-300">
    <div class="max-w-7xl mx-auto">
      
      <!-- Compact Header with Auth Info -->
      <div class="flex justify-between items-center mb-8">
        <div class="text-center flex-1">
          <div class="flex items-center justify-center mb-3">
            <div class="w-10 h-10 bg-primary/20 rounded-lg flex items-center justify-center mr-3">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
            </div>
            <h1 class="text-3xl font-bold text-white">DTikTok Admin</h1>
          </div>
          <p class="text-base text-white/70">Complete control panel for your DTikTok shortcut</p>
        </div>
        
        <!-- User Info & Logout -->
        <div class="flex items-center space-x-4">
          <div class="text-right">
            <p class="text-white font-medium" id="username-display">Loading...</p>
            <p class="text-white/60 text-xs">Admin User</p>
          </div>
          <div class="dropdown dropdown-end">
            <div tabindex="0" role="button" class="btn btn-ghost btn-circle">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
            </div>
            <ul tabindex="0" class="menu dropdown-content z-[1] p-2 shadow bg-base-300 rounded-box w-52 mt-4">
              <li><a href="/" class="text-white">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                View Homepage
              </a></li>
              <li><a id="logout-btn" class="text-error">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1" />
                </svg>
                Logout
              </a></li>
            </ul>
          </div>
        </div>
      </div>

      <!-- Tabbed Interface -->
      <div class="glass rounded-3xl border border-white/10 shadow-2xl">
        
        <!-- Tab Navigation -->
        <div class="tabs tabs-boxed p-2 bg-transparent border-b border-white/10">
          <a class="tab tab-active" id="overview-tab">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
            </svg>
            Overview
          </a>
          <a class="tab" id="config-tab">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
            Configuration
          </a>
          <a class="tab" id="ads-tab">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
            Ad Management
          </a>
          <a class="tab" id="seo-tab">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
            </svg>
            SEO & Analytics
          </a>
          <a class="tab" id="security-tab">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
            </svg>
            Security
          </a>
          <a class="tab" id="tools-tab">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4" />
            </svg>
            Tools
          </a>
        </div>

        <!-- Tab Content -->
        <div class="p-6">
          
          <!-- Overview Tab -->
          <div id="overview-content" class="tab-content block">
            <div class="mb-6">
              <h2 class="text-2xl font-bold text-white mb-2">Dashboard Overview</h2>
              <p class="text-white/70">Monitor your DTikTok shortcut performance and status</p>
            </div>
            
            <!-- Quick Stats Grid -->
            <div class="grid md:grid-cols-4 gap-4 mb-6">
              <div class="bg-gradient-to-r from-primary/10 to-primary/5 rounded-xl p-4 border border-primary/20">
                <div class="flex items-center space-x-3">
                  <div class="w-10 h-10 bg-primary/20 rounded-lg flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                    </svg>
                  </div>
                  <div>
                    <p class="text-xs text-white/60 uppercase tracking-wide">Downloads</p>
                    <p class="text-lg font-bold text-white">{dtiktokConfig.stats.totalDownloads.toLocaleString()}</p>
                  </div>
                </div>
              </div>
              
              <div class="bg-gradient-to-r from-secondary/10 to-secondary/5 rounded-xl p-4 border border-secondary/20">
                <div class="flex items-center space-x-3">
                  <div class="w-10 h-10 bg-secondary/20 rounded-lg flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-secondary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
                    </svg>
                  </div>
                  <div>
                    <p class="text-xs text-white/60 uppercase tracking-wide">Users</p>
                    <p class="text-lg font-bold text-white">{dtiktokConfig.stats.activeUsers.toLocaleString()}</p>
                  </div>
                </div>
              </div>
              
              <div class="bg-gradient-to-r from-accent/10 to-accent/5 rounded-xl p-4 border border-accent/20">
                <div class="flex items-center space-x-3">
                  <div class="w-10 h-10 bg-accent/20 rounded-lg flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-accent" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
                    </svg>
                  </div>
                  <div>
                    <p class="text-xs text-white/60 uppercase tracking-wide">Rating</p>
                    <p class="text-lg font-bold text-white">{dtiktokConfig.stats.averageRating}/5.0</p>
                  </div>
                </div>
              </div>
              
              <div class="bg-gradient-to-r from-success/10 to-success/5 rounded-xl p-4 border border-success/20">
                <div class="flex items-center space-x-3">
                  <div class="w-10 h-10 bg-success/20 rounded-lg flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-success" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                  </div>
                  <div>
                    <p class="text-xs text-white/60 uppercase tracking-wide">Status</p>
                    <p class="text-lg font-bold text-success">{dtiktokConfig.isActive ? 'Active' : 'Inactive'}</p>
                  </div>
                </div>
              </div>
            </div>

            <!-- Current Configuration Summary -->
            <div class="grid md:grid-cols-4 gap-4">
              <div class="bg-gradient-to-r from-info/10 to-info/5 rounded-xl p-4 border border-info/20">
                <h3 class="text-lg font-bold text-white mb-3">Current Version</h3>
                <div class="space-y-2 text-sm">
                  <div class="flex justify-between">
                    <span class="text-white/60">Version:</span>
                    <span class="text-white font-medium">v{dtiktokConfig.version}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">Release:</span>
                    <span class="text-white font-medium">{dtiktokConfig.releaseDate}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">File Size:</span>
                    <span class="text-white font-medium">{dtiktokConfig.fileSize}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">iOS Support:</span>
                    <span class="text-white font-medium">{dtiktokConfig.iosSupport}</span>
                  </div>
                </div>
              </div>
              
              <div class="bg-gradient-to-r from-warning/10 to-warning/5 rounded-xl p-4 border border-warning/20">
                <h3 class="text-lg font-bold text-white mb-3">Ad Status</h3>
                <div class="space-y-2 text-sm">
                  <div class="flex justify-between">
                    <span class="text-white/60">Total Ads:</span>
                    <span class="text-white font-medium">{Object.keys(dtiktokConfig.ads).length}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">Active Ads:</span>
                    <span class="text-white font-medium">{Object.values(dtiktokConfig.ads).filter(ad => ad.enabled).length}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">Disabled Ads:</span>
                    <span class="text-white font-medium">{Object.values(dtiktokConfig.ads).filter(ad => !ad.enabled).length}</span>
                  </div>
                </div>
              </div>

              <div class="bg-gradient-to-r from-primary/10 to-primary/5 rounded-xl p-4 border border-primary/20">
                <h3 class="text-lg font-bold text-white mb-3">SEO Status</h3>
                <div class="space-y-2 text-sm">
                  <div class="flex justify-between">
                    <span class="text-white/60">Search Console:</span>
                    <span class="text-white font-medium">{dtiktokConfig.seo?.searchConsole ? '✅ Active' : '❌ Not Set'}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">Analytics:</span>
                    <span class="text-white font-medium">{dtiktokConfig.seo?.analyticsId ? '✅ Active' : '❌ Not Set'}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">ads.txt:</span>
                    <span class="text-white font-medium">{dtiktokConfig.seo?.adsTxt ? '✅ Active' : '❌ Not Set'}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">robots.txt:</span>
                    <span class="text-white font-medium">{dtiktokConfig.seo?.robotsTxt ? '✅ Custom' : '📄 Default'}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">Head Ads:</span>
                    <span class="text-white font-medium">{dtiktokConfig.seo?.headAdsCode ? '✅ Active' : '❌ Not Set'}</span>
                  </div>
                </div>
              </div>

              <div class="bg-gradient-to-r from-error/10 to-error/5 rounded-xl p-4 border border-error/20">
                <h3 class="text-lg font-bold text-white mb-3">Security Status</h3>
                <div class="space-y-2 text-sm">
                  <div class="flex justify-between">
                    <span class="text-white/60">Current User:</span>
                    <span class="text-white font-medium">{dtiktokConfig.auth.username}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">Session:</span>
                    <span class="text-success font-medium">🔒 Secured</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">Password:</span>
                    <span class="text-white font-medium">Protected</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-white/60">Last Change:</span>
                    <span class="text-white font-medium">{new Date(dtiktokConfig.auth.lastPasswordChange).toLocaleDateString()}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Configuration Tab -->
          <div id="config-content" class="tab-content">
            <div class="mb-6">
              <h2 class="text-2xl font-bold text-white mb-2">Shortcut Configuration</h2>
              <p class="text-white/70">Update your DTikTok shortcut settings and information</p>
            </div>
            
            <form id="config-form" class="space-y-4">
              <div class="grid md:grid-cols-2 gap-4">
                <!-- Version -->
                <div class="form-control">
                  <label class="label">
                    <span class="label-text text-white font-medium">Version</span>
                  </label>
                  <input type="text" id="version" value={dtiktokConfig.version} class="input input-bordered bg-base-300/50 text-white border-primary/20 focus:border-primary/50" placeholder="4.4.3" />
                </div>
                
                <!-- Release Date -->
                <div class="form-control">
                  <label class="label">
                    <span class="label-text text-white font-medium">Release Date</span>
                  </label>
                  <input type="text" id="releaseDate" value={dtiktokConfig.releaseDate} class="input input-bordered bg-base-300/50 text-white border-primary/20 focus:border-primary/50" placeholder="29.03.25" />
                </div>
                
                <!-- File Size -->
                <div class="form-control">
                  <label class="label">
                    <span class="label-text text-white font-medium">File Size</span>
                  </label>
                  <input type="text" id="fileSize" value={dtiktokConfig.fileSize} class="input input-bordered bg-base-300/50 text-white border-primary/20 focus:border-primary/50" placeholder="1.5MB" />
                </div>
                
                <!-- iOS Support -->
                <div class="form-control">
                  <label class="label">
                    <span class="label-text text-white font-medium">iOS Support</span>
                  </label>
                  <input type="text" id="iosSupport" value={dtiktokConfig.iosSupport} class="input input-bordered bg-base-300/50 text-white border-primary/20 focus:border-primary/50" placeholder="IOS 17 and latest" />
                </div>
              </div>
              
              <!-- Download URL -->
              <div class="form-control">
                <label class="label">
                  <span class="label-text text-white font-medium">Download URL</span>
                </label>
                <textarea id="downloadUrl" class="textarea textarea-bordered bg-base-300/50 text-white border-primary/20 focus:border-primary/50 h-20" placeholder="https://www.icloud.com/shortcuts/...">{dtiktokConfig.downloadUrl}</textarea>
              </div>
              
              <!-- Update Notes -->
              <div class="form-control">
                <label class="label">
                  <span class="label-text text-white font-medium">Update Notes</span>
                </label>
                <textarea id="updateNotes" class="textarea textarea-bordered bg-base-300/50 text-white border-primary/20 focus:border-primary/50 h-24" placeholder="Latest stable release with...">{dtiktokConfig.updateNotes}</textarea>
              </div>
              
              <!-- Active Status -->
              <div class="form-control">
                <label class="cursor-pointer label">
                  <span class="label-text text-white font-medium">Active Status</span>
                  <input type="checkbox" id="isActive" checked={dtiktokConfig.isActive} class="toggle toggle-primary" />
                </label>
              </div>
              
              <!-- Update Button -->
              <button type="submit" class="btn btn-primary btn-lg w-full">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                </svg>
                Update Configuration
              </button>
            </form>
          </div>

          <!-- Ad Management Tab -->
          <div id="ads-content" class="tab-content">
            <div class="mb-6">
              <h2 class="text-2xl font-bold text-white mb-2">Ad Management</h2>
              <p class="text-white/70">Create and manage your shortcode ad system</p>
            </div>

            <!-- Existing Ads -->
            <div class="grid lg:grid-cols-2 gap-4 mb-6">
              {Object.entries(dtiktokConfig.ads).map(([adId, ad]) => (
                <div class="bg-gradient-to-r from-warning/10 to-warning/5 rounded-xl p-4 border border-warning/20">
                  <div class="flex items-center justify-between mb-3">
                    <div>
                      <h3 class="text-lg font-bold text-white">{ad.name}</h3>
                      <code class="text-warning text-xs bg-warning/10 px-2 py-1 rounded">{ad.shortcode}</code>
                    </div>
                    <div class="form-control">
                      <input type="checkbox" checked={ad.enabled} class="toggle toggle-warning toggle-sm" data-ad-toggle={adId} />
                    </div>
                  </div>
                  
                  <div class="space-y-3">
                    <div class="form-control">
                      <input type="text" value={ad.name} class="input input-sm input-bordered bg-base-300/50 text-white border-warning/20 focus:border-warning/50" data-ad-name={adId} placeholder="Ad Name" />
                    </div>
                    
                    <div class="form-control">
                      <textarea class="textarea textarea-sm textarea-bordered bg-base-300/50 text-white border-warning/20 focus:border-warning/50 h-20" placeholder="Ad code..." data-ad-code={adId}>{ad.code}</textarea>
                    </div>
                    
                    <div class="flex space-x-2">
                      <button class="btn btn-warning btn-xs update-ad" data-ad-id={adId}>
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                        </svg>
                        Update
                      </button>
                      <button class="btn btn-error btn-xs delete-ad" data-ad-id={adId}>
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                        </svg>
                        Delete
                      </button>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            <!-- Create New Ad -->
            <div class="bg-gradient-to-r from-success/10 to-success/5 rounded-xl p-4 border border-success/20">
              <h3 class="text-lg font-bold text-white mb-4">Create New Ad Shortcode</h3>
              
              <form id="new-ad-form" class="space-y-4">
                <div class="grid md:grid-cols-2 gap-4">
                  <div class="form-control">
                    <input type="text" id="newAdName" class="input input-bordered bg-base-300/50 text-white border-success/20 focus:border-success/50" placeholder="Ad Name (e.g., Hero Banner)" />
                  </div>
                  
                  <div class="form-control">
                    <input type="text" id="newAdShortcode" class="input input-bordered bg-base-300/50 text-white border-success/20 focus:border-success/50" placeholder="Shortcode ID (e.g., ad-hero)" />
                  </div>
                </div>
                
                <div class="form-control">
                  <textarea id="newAdCode" class="textarea textarea-bordered bg-base-300/50 text-white border-success/20 focus:border-success/50 h-24" placeholder="Paste your ad code here (Google AdSense, HTML, etc.)"></textarea>
                </div>
                
                <button type="submit" class="btn btn-success btn-sm">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                  </svg>
                  Create Ad Shortcode
                </button>
              </form>
            </div>

            <!-- Usage Guide -->
            <div class="mt-4 bg-gradient-to-r from-info/10 to-info/5 rounded-xl p-4 border border-info/20">
              <h4 class="text-sm font-bold text-info mb-2">Quick Usage Guide</h4>
              <div class="text-xs text-white/70 space-y-1">
                <p>1. Create an ad above with a unique shortcode ID</p>
                <p>2. Place <code class="text-warning">&lt;AdSlot id="your-shortcode-id" /&gt;</code> anywhere in your .astro files</p>
                <p>3. The ad will appear at that exact location when enabled</p>
              </div>
            </div>
          </div>

          <!-- SEO & Analytics Tab -->
          <div id="seo-content" class="tab-content">
            <div class="mb-6">
              <h2 class="text-2xl font-bold text-white mb-2">SEO & Analytics</h2>
              <p class="text-white/70">Manage Google Search Console, Analytics, ads.txt and other SEO tools</p>
            </div>

            <form id="seo-form" class="space-y-6">
              
              <!-- Google Search Console -->
              <div class="bg-gradient-to-r from-success/10 to-success/5 rounded-xl p-4 border border-success/20">
                <h3 class="text-lg font-bold text-white mb-4 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-success" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Google Search Console
                </h3>
                <div class="form-control">
                  <label class="label">
                    <span class="label-text text-white font-medium">Verification Meta Tag</span>
                    <span class="label-text-alt text-white/60">Without &lt;meta&gt; tags</span>
                  </label>
                  <textarea id="searchConsoleCode" class="textarea textarea-bordered bg-base-300/50 text-white border-success/20 focus:border-success/50 h-20" placeholder='content="your-verification-code-here"'>{dtiktokConfig.seo?.searchConsole || ''}</textarea>
                  <div class="label">
                    <span class="label-text-alt text-white/50 text-xs">Example: content="abcd1234efgh5678" (paste only the content attribute)</span>
                  </div>
                </div>
              </div>

              <!-- Google Analytics -->
              <div class="bg-gradient-to-r from-info/10 to-info/5 rounded-xl p-4 border border-info/20">
                <h3 class="text-lg font-bold text-white mb-4 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-info" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  Google Analytics (GA4)
                </h3>
                <div class="form-control">
                  <label class="label">
                    <span class="label-text text-white font-medium">Measurement ID</span>
                    <span class="label-text-alt text-white/60">e.g., G-XXXXXXXXXX</span>
                  </label>
                  <input type="text" id="analyticsId" value={dtiktokConfig.seo?.analyticsId || ''} class="input input-bordered bg-base-300/50 text-white border-info/20 focus:border-info/50" placeholder="G-XXXXXXXXXX" />
                </div>
              </div>

              <!-- ads.txt File -->
              <div class="bg-gradient-to-r from-warning/10 to-warning/5 rounded-xl p-4 border border-warning/20">
                <h3 class="text-lg font-bold text-white mb-4 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-warning" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                  ads.txt Content
                </h3>
                <div class="form-control">
                  <label class="label">
                    <span class="label-text text-white font-medium">ads.txt File Content</span>
                    <span class="label-text-alt text-white/60">For Google AdSense and other ad networks</span>
                  </label>
                  <textarea id="adsTxtContent" class="textarea textarea-bordered bg-base-300/50 text-white border-warning/20 focus:border-warning/50 h-32" placeholder="google.com, pub-0000000000000000, DIRECT, f08c47fec0942fa0">{dtiktokConfig.seo?.adsTxt || ''}</textarea>
                  <div class="label">
                    <span class="label-text-alt text-white/50 text-xs">Each line should contain: domain, publisher-id, relationship, certification-authority</span>
                  </div>
                </div>
              </div>

              <!-- robots.txt -->
              <div class="bg-gradient-to-r from-secondary/10 to-secondary/5 rounded-xl p-4 border border-secondary/20">
                <h3 class="text-lg font-bold text-white mb-4 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-secondary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
                  </svg>
                  robots.txt Additional Rules
                </h3>
                <div class="form-control">
                  <label class="label">
                    <span class="label-text text-white font-medium">Custom robots.txt Rules</span>
                    <span class="label-text-alt text-white/60">Additional rules to append</span>
                  </label>
                  <textarea id="robotsTxtContent" class="textarea textarea-bordered bg-base-300/50 text-white border-secondary/20 focus:border-secondary/50 h-24" placeholder="Disallow: /admin/&#10;Disallow: /api/">{dtiktokConfig.seo?.robotsTxt || ''}</textarea>
                </div>
              </div>

              <!-- Meta Tags -->
              <div class="bg-gradient-to-r from-primary/10 to-primary/5 rounded-xl p-4 border border-primary/20">
                <h3 class="text-lg font-bold text-white mb-4 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
                  </svg>
                  Additional Meta Tags
                </h3>
                <div class="grid md:grid-cols-2 gap-4">
                  <div class="form-control">
                    <label class="label">
                      <span class="label-text text-white font-medium">Site Verification (Other)</span>
                    </label>
                    <textarea id="otherVerification" class="textarea textarea-bordered bg-base-300/50 text-white border-primary/20 focus:border-primary/50 h-20" placeholder="Bing, Yandex, Pinterest verification codes">{dtiktokConfig.seo?.otherVerification || ''}</textarea>
                  </div>
                  
                  <div class="form-control">
                    <label class="label">
                      <span class="label-text text-white font-medium">Custom Meta Tags</span>
                    </label>
                    <textarea id="customMeta" class="textarea textarea-bordered bg-base-300/50 text-white border-primary/20 focus:border-primary/50 h-20" placeholder="Additional custom meta tags">{dtiktokConfig.seo?.customMeta || ''}</textarea>
                  </div>
                </div>
              </div>

              <!-- Head Ads Code -->
              <div class="bg-gradient-to-r from-accent/10 to-accent/5 rounded-xl p-4 border border-accent/20">
                <h3 class="text-lg font-bold text-white mb-4 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-accent" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                  </svg>
                  Head Ads Code
                </h3>
                <div class="form-control">
                  <label class="label">
                    <span class="label-text text-white font-medium">HTML Head Section Code</span>
                    <span class="label-text-alt text-white/60">AdSense, verification codes, etc.</span>
                  </label>
                  <textarea id="headAdsCode" class="textarea textarea-bordered bg-base-300/50 text-white border-accent/20 focus:border-accent/50 h-32" placeholder="&lt;script async src=&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXXXXXXXXXXXXX&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;">{dtiktokConfig.seo?.headAdsCode || ''}</textarea>
                  <div class="label">
                    <span class="label-text-alt text-white/50 text-xs">Code will be inserted in the &lt;head&gt; section of all pages. Include script tags if needed.</span>
                  </div>
                </div>
                
                <!-- Common Examples -->
                <div class="mt-4 space-y-2">
                  <h4 class="text-sm font-bold text-accent">Common Examples:</h4>
                  <div class="grid md:grid-cols-2 gap-2 text-xs">
                    <div class="bg-accent/10 rounded p-2">
                      <p class="font-medium text-accent mb-1">Google AdSense:</p>
                      <code class="text-white/70 break-all">&lt;script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXX"&gt;&lt;/script&gt;</code>
                    </div>
                    <div class="bg-accent/10 rounded p-2">
                      <p class="font-medium text-accent mb-1">Meta Pixel:</p>
                      <code class="text-white/70 break-all">&lt;meta name="facebook-domain-verification" content="XXXX" /&gt;</code>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Update Button -->
              <button type="submit" class="btn btn-primary btn-lg w-full">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                </svg>
                Update SEO & Analytics Settings
              </button>
            </form>

            <!-- Quick Actions -->
            <div class="mt-6 grid md:grid-cols-2 lg:grid-cols-4 gap-4">
              <div class="bg-gradient-to-r from-success/10 to-success/5 rounded-lg p-3 border border-success/20">
                <h4 class="text-sm font-bold text-success mb-2">🔍 Search Console</h4>
                <p class="text-xs text-white/70">Verify your site ownership and monitor search performance</p>
              </div>
              
              <div class="bg-gradient-to-r from-info/10 to-info/5 rounded-lg p-3 border border-info/20">
                <h4 class="text-sm font-bold text-info mb-2">📊 Analytics</h4>
                <p class="text-xs text-white/70">Track website traffic and user behavior</p>
              </div>
              
              <div class="bg-gradient-to-r from-warning/10 to-warning/5 rounded-lg p-3 border border-warning/20">
                <h4 class="text-sm font-bold text-warning mb-2">💰 ads.txt</h4>
                <p class="text-xs text-white/70">Prevent ad fraud and increase ad revenue</p>
              </div>

              <div class="bg-gradient-to-r from-accent/10 to-accent/5 rounded-lg p-3 border border-accent/20">
                <h4 class="text-sm font-bold text-accent mb-2">🔗 Head Ads</h4>
                <p class="text-xs text-white/70">Add AdSense and verification codes to &lt;head&gt;</p>
              </div>
            </div>
          </div>

          <!-- Security Tab -->
          <div id="security-content" class="tab-content">
            <div class="mb-6">
              <h2 class="text-2xl font-bold text-white mb-2">Security Settings</h2>
              <p class="text-white/70">Manage your admin credentials and security settings</p>
            </div>

            <div class="grid md:grid-cols-2 gap-6">
              
              <!-- Change Password -->
              <div class="bg-gradient-to-r from-error/10 to-error/5 rounded-xl p-6 border border-error/20">
                <h3 class="text-xl font-bold text-white mb-6 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-error" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                  </svg>
                  Change Password
                </h3>
                
                <form id="change-password-form" class="space-y-4">
                  <div class="form-control">
                    <label class="label">
                      <span class="label-text text-white font-medium">Current Password</span>
                    </label>
                    <input type="password" id="currentPassword" required class="input input-bordered bg-base-300/50 text-white border-error/20 focus:border-error/50" placeholder="Enter current password" />
                  </div>
                  
                  <div class="form-control">
                    <label class="label">
                      <span class="label-text text-white font-medium">New Password</span>
                    </label>
                    <input type="password" id="newPassword" required class="input input-bordered bg-base-300/50 text-white border-error/20 focus:border-error/50" placeholder="Enter new password" />
                  </div>
                  
                  <div class="form-control">
                    <label class="label">
                      <span class="label-text text-white font-medium">Confirm New Password</span>
                    </label>
                    <input type="password" id="confirmPassword" required class="input input-bordered bg-base-300/50 text-white border-error/20 focus:border-error/50" placeholder="Confirm new password" />
                  </div>
                  
                  <button type="submit" class="btn btn-error btn-sm w-full">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                    </svg>
                    Change Password
                  </button>
                </form>
              </div>

              <!-- Change Username -->
              <div class="bg-gradient-to-r from-warning/10 to-warning/5 rounded-xl p-6 border border-warning/20">
                <h3 class="text-xl font-bold text-white mb-6 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-warning" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                  </svg>
                  Change Username
                </h3>
                
                <form id="change-username-form" class="space-y-4">
                  <div class="form-control">
                    <label class="label">
                      <span class="label-text text-white font-medium">Current Username</span>
                    </label>
                    <input type="text" id="currentUsernameDisplay" value={dtiktokConfig.auth.username} disabled class="input input-bordered bg-base-300/30 text-white/70 border-warning/20" />
                  </div>
                  
                  <div class="form-control">
                    <label class="label">
                      <span class="label-text text-white font-medium">New Username</span>
                    </label>
                    <input type="text" id="newUsername" required class="input input-bordered bg-base-300/50 text-white border-warning/20 focus:border-warning/50" placeholder="Enter new username" />
                  </div>
                  
                  <div class="form-control">
                    <label class="label">
                      <span class="label-text text-white font-medium">Confirm with Password</span>
                    </label>
                    <input type="password" id="confirmPasswordForUsername" required class="input input-bordered bg-base-300/50 text-white border-warning/20 focus:border-warning/50" placeholder="Enter your password" />
                  </div>
                  
                  <button type="submit" class="btn btn-warning btn-sm w-full">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                    </svg>
                    Change Username
                  </button>
                </form>
              </div>
            </div>

            <!-- Security Info -->
            <div class="mt-6 bg-gradient-to-r from-info/10 to-info/5 rounded-xl p-6 border border-info/20">
              <h3 class="text-lg font-bold text-white mb-4 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-info" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                Security Information
              </h3>
              
              <div class="grid md:grid-cols-3 gap-4 text-sm">
                <div>
                  <p class="text-white font-medium mb-1">Session Timeout</p>
                  <p class="text-white/70">{Math.floor(dtiktokConfig.auth.sessionTimeout / (1000 * 60))} minutes</p>
                </div>
                <div>
                  <p class="text-white font-medium mb-1">Last Password Change</p>
                  <p class="text-white/70">{new Date(dtiktokConfig.auth.lastPasswordChange).toLocaleDateString()}</p>
                </div>
                <div>
                  <p class="text-white font-medium mb-1">Current User</p>
                  <p class="text-white/70">{dtiktokConfig.auth.username}</p>
                </div>
              </div>

              <div class="mt-4 p-4 bg-info/10 rounded-lg">
                <h4 class="text-sm font-bold text-info mb-2">🔐 Security Tips</h4>
                <ul class="text-xs text-white/70 space-y-1">
                  <li>• Use a strong password with at least 8 characters</li>
                  <li>• Include uppercase, lowercase, numbers, and special characters</li>
                  <li>• Change your password regularly</li>
                  <li>• Don't share your admin credentials</li>
                  <li>• Always logout when finished</li>
                </ul>
              </div>
            </div>
          </div>

          <!-- Tools Tab -->
          <div id="tools-content" class="tab-content">
            <div class="mb-6">
              <h2 class="text-2xl font-bold text-white mb-2">Dashboard Tools</h2>
              <p class="text-white/70">Configuration management and system tools</p>
            </div>

            <div class="grid md:grid-cols-3 gap-4">
              <a href="/" class="group bg-gradient-to-r from-info/10 to-info/5 rounded-xl p-4 border border-info/20 hover:border-info/40 transition-all duration-300 hover:scale-105">
                <div class="flex items-center space-x-3">
                  <div class="w-10 h-10 bg-info/20 rounded-lg flex items-center justify-center group-hover:bg-info/30 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-info" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                    </svg>
                  </div>
                  <div>
                    <h3 class="text-white font-bold text-sm">View Homepage</h3>
                    <p class="text-white/60 text-xs">See live changes</p>
                  </div>
                </div>
              </a>
              
              <button id="export-config" class="group bg-gradient-to-r from-warning/10 to-warning/5 rounded-xl p-4 border border-warning/20 hover:border-warning/40 transition-all duration-300 hover:scale-105">
                <div class="flex items-center space-x-3">
                  <div class="w-10 h-10 bg-warning/20 rounded-lg flex items-center justify-center group-hover:bg-warning/30 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-warning" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-4-4m4 4l4-4m3-2h3a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2v-6a2 2 0 012-2h3" />
                    </svg>
                  </div>
                  <div>
                    <h3 class="text-white font-bold text-sm">Export Config</h3>
                    <p class="text-white/60 text-xs">Download backup</p>
                  </div>
                </div>
              </button>
              
              <button id="reset-config" class="group bg-gradient-to-r from-error/10 to-error/5 rounded-xl p-4 border border-error/20 hover:border-error/40 transition-all duration-300 hover:scale-105">
                <div class="flex items-center space-x-3">
                  <div class="w-10 h-10 bg-error/20 rounded-lg flex items-center justify-center group-hover:bg-error/30 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-error" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                    </svg>
                  </div>
                  <div>
                    <h3 class="text-white font-bold text-sm">Reset Config</h3>
                    <p class="text-white/60 text-xs">Restore defaults</p>
                  </div>
                </div>
              </button>
            </div>

            <!-- System Information -->
            <div class="mt-6 bg-gradient-to-r from-base-300/50 to-base-200/50 rounded-xl p-4 border border-white/10">
              <h3 class="text-lg font-bold text-white mb-3">System Information</h3>
              <div class="grid md:grid-cols-2 gap-4 text-sm">
                <div>
                  <h4 class="font-semibold text-white mb-2">Configuration</h4>
                  <div class="space-y-1 text-white/70">
                    <p>Last Updated: {new Date(dtiktokConfig.lastUpdated).toLocaleString()}</p>
                    <p>Features: {dtiktokConfig.features.length}</p>
                    <p>Version: {dtiktokConfig.version}</p>
                  </div>
                </div>
                <div>
                  <h4 class="font-semibold text-white mb-2">Ad System</h4>
                  <div class="space-y-1 text-white/70">
                    <p>Total Ads: {Object.keys(dtiktokConfig.ads).length}</p>
                    <p>Active: {Object.values(dtiktokConfig.ads).filter(ad => ad.enabled).length}</p>
                    <p>Disabled: {Object.values(dtiktokConfig.ads).filter(ad => !ad.enabled).length}</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>


    </div>
  </section>

  <!-- Success/Error Messages -->
  <div id="toast-container" class="fixed bottom-6 right-6 z-50 space-y-3"></div>

  <style>
    .tab-content {
      display: none;
    }
    
    .tab-content.active {
      display: block !important;
    }

    /* Make overview tab visible by default */
    #overview-content {
      display: block;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      console.log('Dashboard initialized');
      
      // Check authentication first
      checkAuthentication();
      
      // Tab switching functionality
      const tabs = document.querySelectorAll('.tab');
      const tabContents = document.querySelectorAll('.tab-content');

      // Initialize - show overview tab by default
      document.getElementById('overview-content').style.display = 'block';

      tabs.forEach(tab => {
        tab.addEventListener('click', function(e) {
          e.preventDefault();
          console.log('Tab clicked:', this.id);
          
          // Remove active class from all tabs
          tabs.forEach(t => t.classList.remove('tab-active'));
          // Add active class to clicked tab
          this.classList.add('tab-active');
          
          // Hide all tab contents
          tabContents.forEach(content => {
            content.style.display = 'none';
          });
          
          // Show corresponding tab content
          const tabId = this.id.replace('-tab', '-content');
          const targetContent = document.getElementById(tabId);
          console.log('Showing content:', tabId);
          if (targetContent) {
            targetContent.style.display = 'block';
          }
        });
      });

      // Logout functionality
      document.getElementById('logout-btn').addEventListener('click', async function(e) {
        e.preventDefault();
        
        if (confirm('Are you sure you want to logout?')) {
          const token = localStorage.getItem('auth-token');
          
          try {
            await fetch('/api/auth', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                action: 'logout',
                token
              })
            });
          } catch (error) {
            console.log('Logout error:', error);
          }
          
          // Clear local storage
          localStorage.removeItem('auth-token');
          localStorage.removeItem('auth-expires');
          localStorage.removeItem('auth-username');
          
          // Redirect to login
          window.location.href = '/admin/login';
        }
      });

      // Authentication check function
      async function checkAuthentication() {
        const token = localStorage.getItem('auth-token');
        const expires = localStorage.getItem('auth-expires');
        const username = localStorage.getItem('auth-username');
        
        if (!token || !expires || Date.now() >= parseInt(expires)) {
          // Session expired or missing
          window.location.href = '/admin/login';
          return;
        }
        
        try {
          const response = await fetch('/api/auth', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              action: 'verify',
              token
            })
          });
          
          const result = await response.json();
          
          if (!result.success || !result.valid) {
            // Invalid session
            localStorage.removeItem('auth-token');
            localStorage.removeItem('auth-expires');
            localStorage.removeItem('auth-username');
            window.location.href = '/admin/login';
            return;
          }
          
          // Update username display
          document.getElementById('username-display').textContent = result.username || username;
          
        } catch (error) {
          console.error('Auth check error:', error);
          window.location.href = '/admin/login';
        }
      }
    });

    // Toast notification function
    function showToast(message, type = 'success') {
      const toastContainer = document.getElementById('toast-container');
      const toast = document.createElement('div');
      toast.className = `alert alert-${type} shadow-lg max-w-sm`;
      toast.innerHTML = `
        <div>
          <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current flex-shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>${message}</span>
        </div>
      `;
      
      toastContainer.appendChild(toast);
      
      setTimeout(() => {
        toast.remove();
      }, 5000);
    }

    // Configuration form handler
    document.getElementById('config-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = {
        version: document.getElementById('version').value,
        releaseDate: document.getElementById('releaseDate').value,
        downloadUrl: document.getElementById('downloadUrl').value,
        fileSize: document.getElementById('fileSize').value,
        iosSupport: document.getElementById('iosSupport').value,
        updateNotes: document.getElementById('updateNotes').value,
        isActive: document.getElementById('isActive').checked,
        lastUpdated: new Date().toISOString()
      };
      
      try {
        const response = await fetch('/api/update-config', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ type: 'config', data: formData })
        });
        
        if (response.ok) {
          showToast('Configuration updated successfully!', 'success');
        } else {
          showToast('Failed to update configuration', 'error');
        }
      } catch (error) {
        showToast('Error updating configuration', 'error');
      }
    });

    // Ad Management Functions
    
    // Create new ad
    document.getElementById('new-ad-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const name = document.getElementById('newAdName').value;
      const shortcodeId = document.getElementById('newAdShortcode').value;
      const code = document.getElementById('newAdCode').value;
      
      if (!name || !shortcodeId || !code) {
        showToast('Please fill in all fields', 'error');
        return;
      }
      
      const adData = {
        [shortcodeId]: {
          enabled: true,
          name: name,
          code: code,
          shortcode: `[${shortcodeId}]`
        }
      };
      
      try {
        const response = await fetch('/api/update-config', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ 
            type: 'ads', 
            data: { 
              action: 'create', 
              data: adData 
            } 
          })
        });
        
        if (response.ok) {
          showToast(`Ad shortcode [${shortcodeId}] created successfully!`, 'success');
          setTimeout(() => location.reload(), 1000);
        } else {
          showToast('Failed to create ad shortcode', 'error');
        }
      } catch (error) {
        showToast('Error creating ad shortcode', 'error');
      }
    });
    
    // Update existing ad
    document.querySelectorAll('.update-ad').forEach(button => {
      button.addEventListener('click', async (e) => {
        const adId = e.target.closest('.update-ad').dataset.adId;
        const name = document.querySelector(`[data-ad-name="${adId}"]`).value;
        const code = document.querySelector(`[data-ad-code="${adId}"]`).value;
        const enabled = document.querySelector(`[data-ad-toggle="${adId}"]`).checked;
        
        const adData = {
          [adId]: {
            enabled: enabled,
            name: name,
            code: code,
            shortcode: `[${adId}]`
          }
        };
        
        try {
          const response = await fetch('/api/update-config', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
              type: 'ads', 
              data: { 
                action: 'update', 
                data: adData 
              } 
            })
          });
          
          if (response.ok) {
            showToast(`Ad "${name}" updated successfully!`, 'success');
          } else {
            showToast('Failed to update ad', 'error');
          }
        } catch (error) {
          showToast('Error updating ad', 'error');
        }
      });
    });
    
    // Delete ad
    document.querySelectorAll('.delete-ad').forEach(button => {
      button.addEventListener('click', async (e) => {
        const adId = e.target.closest('.delete-ad').dataset.adId;
        const adName = document.querySelector(`[data-ad-name="${adId}"]`).value;
        
        if (confirm(`Are you sure you want to delete "${adName}" ad? This cannot be undone.`)) {
                      try {
              const response = await fetch('/api/update-config', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ 
                  type: 'ads', 
                  data: { 
                    action: 'delete', 
                    data: { adId: adId } 
                  } 
                })
              });
            
            if (response.ok) {
              showToast(`Ad "${adName}" deleted successfully!`, 'success');
              setTimeout(() => location.reload(), 1000);
            } else {
              showToast('Failed to delete ad', 'error');
            }
          } catch (error) {
            showToast('Error deleting ad', 'error');
          }
        }
      });
    });
    
    // Toggle ad enable/disable
    document.querySelectorAll('[data-ad-toggle]').forEach(toggle => {
      toggle.addEventListener('change', async (e) => {
        const adId = e.target.dataset.adToggle;
        const enabled = e.target.checked;
        const name = document.querySelector(`[data-ad-name="${adId}"]`).value;
        const code = document.querySelector(`[data-ad-code="${adId}"]`).value;
        
        const adData = {
          [adId]: {
            enabled: enabled,
            name: name,
            code: code,
            shortcode: `[${adId}]`
          }
        };
        
        try {
          const response = await fetch('/api/update-config', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
              type: 'ads', 
              data: { 
                action: 'update', 
                data: adData 
              } 
            })
          });
          
          if (response.ok) {
            showToast(`Ad "${name}" ${enabled ? 'enabled' : 'disabled'}!`, 'success');
          } else {
            showToast('Failed to update ad status', 'error');
          }
        } catch (error) {
          showToast('Error updating ad status', 'error');
        }
      });
    });

    // SEO & Analytics form handler
    document.getElementById('seo-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const seoData = {
        searchConsole: document.getElementById('searchConsoleCode').value,
        analyticsId: document.getElementById('analyticsId').value,
        adsTxt: document.getElementById('adsTxtContent').value,
        robotsTxt: document.getElementById('robotsTxtContent').value,
        otherVerification: document.getElementById('otherVerification').value,
        customMeta: document.getElementById('customMeta').value,
        headAdsCode: document.getElementById('headAdsCode').value,
        lastUpdated: new Date().toISOString()
      };
      
      try {
        const response = await fetch('/api/update-config', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ type: 'seo', data: seoData })
        });
        
        if (response.ok) {
          showToast('SEO & Analytics settings updated successfully!', 'success');
        } else {
          showToast('Failed to update SEO settings', 'error');
        }
      } catch (error) {
        showToast('Error updating SEO settings', 'error');
      }
    });

    // Export configuration
    document.getElementById('export-config').addEventListener('click', async () => {
      try {
        const response = await fetch('/api/export-config');
        const config = await response.json();
        
        const dataStr = JSON.stringify(config, null, 2);
        const dataBlob = new Blob([dataStr], {type: 'application/json'});
        
        const link = document.createElement('a');
        link.href = URL.createObjectURL(dataBlob);
        link.download = `dtiktok-config-${new Date().toISOString().split('T')[0]}.json`;
        link.click();
        
        showToast('Configuration exported successfully!', 'success');
      } catch (error) {
        showToast('Error exporting configuration', 'error');
      }
    });

    // Change Password form handler
    document.getElementById('change-password-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const currentPassword = document.getElementById('currentPassword').value;
      const newPassword = document.getElementById('newPassword').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      const token = localStorage.getItem('auth-token');
      
      if (!currentPassword || !newPassword || !confirmPassword) {
        showToast('Please fill in all fields', 'error');
        return;
      }
      
      if (newPassword !== confirmPassword) {
        showToast('New passwords do not match', 'error');
        return;
      }
      
      if (newPassword.length < 6) {
        showToast('New password must be at least 6 characters', 'error');
        return;
      }
      
      try {
        const response = await fetch('/api/auth', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            action: 'change-password',
            token,
            currentPassword,
            newPassword
          })
        });
        
        const result = await response.json();
        
        if (result.success) {
          showToast('Password changed successfully!', 'success');
          // Clear form
          document.getElementById('change-password-form').reset();
        } else {
          showToast(result.message || 'Failed to change password', 'error');
        }
      } catch (error) {
        showToast('Error changing password', 'error');
      }
    });

    // Change Username form handler
    document.getElementById('change-username-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const newUsername = document.getElementById('newUsername').value;
      const password = document.getElementById('confirmPasswordForUsername').value;
      const token = localStorage.getItem('auth-token');
      
      if (!newUsername || !password) {
        showToast('Please fill in all fields', 'error');
        return;
      }
      
      if (newUsername.length < 3) {
        showToast('Username must be at least 3 characters', 'error');
        return;
      }
      
      try {
        const response = await fetch('/api/auth', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            action: 'change-username',
            token,
            password,
            newUsername
          })
        });
        
        const result = await response.json();
        
        if (result.success) {
          showToast('Username changed successfully!', 'success');
          // Update displays
          document.getElementById('currentUsernameDisplay').value = newUsername;
          document.getElementById('username-display').textContent = newUsername;
          localStorage.setItem('auth-username', newUsername);
          // Clear form
          document.getElementById('change-username-form').reset();
        } else {
          showToast(result.message || 'Failed to change username', 'error');
        }
      } catch (error) {
        showToast('Error changing username', 'error');
      }
    });

    // Reset configuration
    document.getElementById('reset-config').addEventListener('click', async () => {
      if (confirm('Are you sure you want to reset all configuration to defaults? This cannot be undone.')) {
        try {
          const response = await fetch('/api/reset-config', {
            method: 'POST'
          });
          
          if (response.ok) {
            showToast('Configuration reset successfully!', 'success');
            setTimeout(() => location.reload(), 2000);
          } else {
            showToast('Failed to reset configuration', 'error');
          }
        } catch (error) {
          showToast('Error resetting configuration', 'error');
        }
      }
    });
  </script>
</Layout> 